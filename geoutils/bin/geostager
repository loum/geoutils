#!/usr/bin/python
"""Load Geo-type files into the Accumulo datastore.

"""

import os
import inspect
import sys

import daemoniser
import geoutils

CONF = os.path.join(os.sep, 'etc', 'geoutils', 'conf', 'geoutils.conf')


def main():
    """Script entry point.

    """
    service = daemoniser.Service()
    # Don't need batching support.
    service.parser.remove_option('-b')
    service.parser.add_option('-x', '--fixture_dir',
                              dest='fixture_dir',
                              help='fixture inbound directory')
    service.parser.add_option('-n', '--number',
                              dest='number',
                              help='number of files to generate (default 10)')
    service.parser.add_option('-s', '--sleep',
                              dest='sleep',
                              help='seconds between generation (default 1.0')
    script_name = os.path.basename(inspect.getfile(inspect.currentframe()))
    service.check_args(script_name)

    fixture_dir = None
    if service.options.fixture_dir:
        fixture_dir = service.options.fixture_dir

    gen_number = 10
    if service.options.number:
        gen_number = service.options.number

    gen_sleep = 1.0
    if service.options.sleep:
        gen_sleep = service.options.sleep

    config_file = service.options.config
    if config_file is None:
        if os.path.exists(CONF):
            config_file = CONF

    if config_file is None:
        sys.exit('Unable to source the geoutils.conf')
    else:
        conf = geoutils.IngestConfig(config_file)
        conf.parse_config()

    # OK, start processing.
    ingestd = geoutils.StagerDaemon(pidfile=service.pidfile,
                                    dry=service.dry,
                                    conf=conf,
                                    fixture_dir=fixture_dir,
                                    regen_count=gen_number,
                                    regen_sleep=gen_sleep)

    service.launch_command(ingestd, script_name)

if __name__ == '__main__':
    main()
